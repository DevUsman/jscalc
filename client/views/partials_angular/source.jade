.sidenav-container(flex, layout='row', layout-fill)
  .sidenav-container-content(flex, layout='column', layout-fill)
    md-toolbar#toolbar-source
      div.md-toolbar-tools(ng-include="'/partials/toolbar_tools'", ng-controller='ToolbarToolsCtrl')
      md-tabs(md-selected='selectedTabIndex')
        md-tab(label='IO')
        md-tab(label='SCRIPT')
        md-tab(label='SHARE')
    #tab-content(ng-if='calc !== null', flex, layout='column', layout-fill)
      div(ng-show='selectedTabIndex == 0', flex, layout='column', layout-fill)
        jscalc-calc#calc-source(flex, layout='column', layout-fill, doc='calc.doc', inputs='inputs', edit-mode='true',
        add-input='addInput($event, metaInputs, nested)', add-output='addOutput($event)', configure-input='configureInput(metaInputs, metaInput)', delete-input='deleteInput(metaInputs, id)', configure-output='configureOutput(metaOutputs, metaOutput)', delete-output='deleteOutput(id)', goto-line='gotoLine(lineNumber)', is-active='ioVisible()')
      div(ng-show='selectedTabIndex == 1', flex, layout='column', layout-fill)
        #script-container(flex, layout='row', layout-sm='column', layout-fill)
          #script(flex)
            div(ui-ace='{onLoad: onAceLoad}')
          md-content#cheat-sheet(flex="33")
            h2.frame-title Cheatsheet
            .content(ng-if='!(calc.doc.metaInputs.length && calc.doc.metaOutputs.length)')
              p
                | Not so fast! First add some
                = ' '
                span(ng-if='!calc.doc.metaInputs.length && calc.doc.metaOutputs.length') inputs
                span(ng-if='calc.doc.metaInputs.length && !calc.doc.metaOutputs.length') outputs
                span(ng-if='!calc.doc.metaInputs.length && !calc.doc.metaOutputs.length') inputs and outputs
                = ' '
                | in the IO tab.
            .content(ng-if='calc.doc.metaInputs.length && calc.doc.metaOutputs.length')
              p
                | You need to write the body of a function that transforms inputs into outputs:
              pre
                | function(inputs) {
                |   [Your script goes here]
                | } -> outputs
              p
                | where
                = ' '
                code inputs
                = ' '
                | is an object like this:
              pre
                | {{getInputsSchema()}}
              p
                | and the returned value is an object like this:
              pre
                | {{getOutputsSchema()}}
              p
                | You can configure property names in both above objects in settings for specific inputs or outputs - this cheatsheet will update itself accordingly. You can omit some of the properties from the outputs object, in which case corresponding outputs will not be displayed.
              p
                | The script will be run in a Web Worker. You can choose which libraries to use in calculator settings. If the script throws an error, its string representation will be displayed to the user, so you could write something like
                = ' '
                code throw 'Text to display'
                = ' '
                | .
              p
                | Script editor keyboard shortcuts are listed
                = ' '
                a(href='https://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts', target='_blank') on this page
                | , and you can also hit Cmd/Ctrl + S to save all changes in the calculator.

      div(ng-show='selectedTabIndex == 2', flex, layout='column', layout-fill)
        #share-container(flex, layout='row')
          md-content#share(flex)
            div.link-title(ng-show='newAndNotSaved') After you save this calculator, it will become available on the web at the following URL:
            div.link-title(ng-show='!newAndNotSaved') This calculator is published on the web at the following URL:
            div.link
              a(href='/calc/{{calcId}}') https://jscalc.io/calc/{{calcId}}
            div.description-title Description (1-2 sentences, line breaks will be ignored, links & emails will be auto-detected):
            .description
              textarea(columns="1", ng-model="calc.doc.description", aria-label="Description")
  md-sidenav.md-sidenav-right.md-whiteframe-z3(md-component-id='right',  md-is-locked-open="sidenavsLockedOpen", md-is-open='settingsOpen', layout='column', md-theme="alternative")
    md-content.md-padding.settings(flex, ng-include='settingsTemplate')
